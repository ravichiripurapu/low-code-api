package io.lowcode.platform.domain;

import static io.lowcode.platform.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class PublicationFormVersionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicationFormVersionAllPropertiesEquals(PublicationFormVersion expected, PublicationFormVersion actual) {
        assertPublicationFormVersionAutoGeneratedPropertiesEquals(expected, actual);
        assertPublicationFormVersionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicationFormVersionAllUpdatablePropertiesEquals(
        PublicationFormVersion expected,
        PublicationFormVersion actual
    ) {
        assertPublicationFormVersionUpdatableFieldsEquals(expected, actual);
        assertPublicationFormVersionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicationFormVersionAutoGeneratedPropertiesEquals(
        PublicationFormVersion expected,
        PublicationFormVersion actual
    ) {
        // empty method
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicationFormVersionUpdatableFieldsEquals(PublicationFormVersion expected, PublicationFormVersion actual) {
        assertThat(actual)
            .as("Verify PublicationFormVersion relevant properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()))
            .satisfies(a ->
                assertThat(a.getPublicationFormVersionName())
                    .as("check publicationFormVersionName")
                    .isEqualTo(expected.getPublicationFormVersionName())
            )
            .satisfies(a ->
                assertThat(a.getPublicationFormVersionCode())
                    .as("check publicationFormVersionCode")
                    .isEqualTo(expected.getPublicationFormVersionCode())
            )
            .satisfies(a -> assertThat(a.getFlagActive()).as("check flagActive").isEqualTo(expected.getFlagActive()))
            .satisfies(a -> assertThat(a.getCreateUser()).as("check createUser").isEqualTo(expected.getCreateUser()))
            .satisfies(a ->
                assertThat(a.getCreatedAt())
                    .as("check createdAt")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getCreatedAt())
            )
            .satisfies(a -> assertThat(a.getUpdateUser()).as("check updateUser").isEqualTo(expected.getUpdateUser()))
            .satisfies(a ->
                assertThat(a.getUpdatedAt())
                    .as("check updatedAt")
                    .usingComparator(zonedDataTimeSameInstant)
                    .isEqualTo(expected.getUpdatedAt())
            )
            .satisfies(a -> assertThat(a.getUuid()).as("check uuid").isEqualTo(expected.getUuid()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPublicationFormVersionUpdatableRelationshipsEquals(
        PublicationFormVersion expected,
        PublicationFormVersion actual
    ) {
        assertThat(actual)
            .as("Verify PublicationFormVersion relationships")
            .satisfies(a -> assertThat(a.getPublicationForm()).as("check publicationForm").isEqualTo(expected.getPublicationForm()));
    }
}
